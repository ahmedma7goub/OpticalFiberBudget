pluginManagement {
    def flutterSdkPath = {
        def properties = new Properties()
        file("local.properties").withInputStream { properties.load(it) }
        def flutterSdk = properties.getProperty("flutter.sdk")
        assert flutterSdk != null, "flutter.sdk not set in local.properties"
        return flutterSdk
    }()

    repositories {
        google()
        mavenCentral()
        maven {
            url "$flutterSdkPath/packages/flutter_tools/gradle/m2repository"
        }
        gradlePluginPortal()
    }
}

plugins {
    id 'dev.flutter.flutter-gradle-plugin' version '1.0.0' apply false
    id 'com.android.application' version '7.3.0' apply false
    id 'org.jetbrains.kotlin.android' version '1.7.10' apply false
}

include ':app'

def localProperties = new Properties()
def localPropertiesFile = new File(rootProject.projectDir, "local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterProjectRoot = rootProject.projectDir.parentFile.toPath()

def plugins = new Properties()
def pluginsFile = new File(flutterProjectRoot.toFile(), ".flutter-plugins")
if (pluginsFile.exists()) {
    pluginsFile.withReader("UTF-8") { reader ->
        plugins.load(reader)
    }
}

plugins.each { name, path ->
    def pluginDirectory = flutterProjectRoot.resolve(path).resolve("android").toFile()
    include ":$name"
    project(":$name").projectDir = pluginDirectory
}
